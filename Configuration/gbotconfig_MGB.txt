# Granular Robots Configuration File - MGB
# 

### Files and Paths information
[path]
# Path information (use export PYTHONPATH=..... in bash)
pythonpath = /Users/berthoud/instruments/electro/2021granulobots/Granulobot/Software

### Environment variables
[envars]
    GBOT_BASEPATH = /Users/berthoud/instruments/electro/2021granulobots

### Sockets information: How programs communicate with each other
[sockets]
    # host for incoming telemetry to the robots
    telehost = '192.168.1.7' 
    #telehost = '10.150.248.162' 
    # GBOT - port for telemetry from the robots
    teleport = 6807 
    # port for sending commands to the robots
    cmdport = 6808 
    # Internal socket for sending commands to the robots
    comsock = /tmp/gbotcom
    # Internal socket for getting telemetry from the robots
    telesock = /tmp/gbotele
    # Internal socket for log messages
    logsock = /tmp/gbotlog

### Details about logging used by gbot_command and other programs 
[logging]
    # Name of the log file
    logfile = /Users/berthoud/instruments/electro/2021granulobots/data/gbotlog.txt
    #logfile = $GBOT_BASEPATH/data/gbotlog_%Y%m%d.txt
    # Internal socket for log messages - is in [sockets] section

### Details for the GBOT_READ program
[read]
    # Telemetry parameter to use to identify the robots
    idparam = D
    # Location of the file with incoming telemetry
    #telefile = /Users/berthoud/instruments/electro/2021granulobots/data/gbotelemetry.txt
    telefile = $GBOT_BASEPATH/data/gbotelemetry_%y%m%d_%H.txt

### Details for the simbot simulated robot
[simbot]
    # Telemetry Reporting Frequency (Hz)
    telefreq = 20.0
    # Telemetry Text: Multi-line string, the bot cycles through the lines
    teletext = '''D=01 A=25 B=30
D=05 A=30 B=10'''


tasklist = """

Full Task List:

./ Testrobot: prog that sends string NHz and listens on port to receive messages
  ./ Set up program
  ./ Get config (use library)
  ./ Set ports
  ./ Run delay
  ./ Report telemetry
  ./ Check for commands
* Telemetry
  ./ Basic loop setup and memory for messages: Dict, open file
  ./ Set up configuration ports and stuffs
  ./ Thread function to read from robots
    ./ add detection of IP address and add to message
    ./ Make it deamon so off when shutodwn
  ./ Thread for respond to telequerry
    ./ make new thread for each connection to avoid blocking main program
  * Make sure subthreads die after 1s if no data (crash with error from timeout?)
  ./ Exit if prompted from telequerry
  * Connect real robot
  * Add logging
* Commandinterface
  * Basic setup with existing parts:
    * Add files: Agentparent, Interparent, Userinter, Socketinter, Webinter, Logctrl, Configagent
    * Add interfaces and agents: Userinter, socketinger, configagent
  * Make telemetry agent - get (gets telemetry into memory)
    * commlist (ip, last entry, MAC) varlist (acc, vel, motor settings) - all configurable
    * On startup check if read is running (after 1s delay) and report error if not.
  * Send command agent - send robotId command
* Library:
  ./ Open config (also accepts multiple configs - see HAWC and loads envars)
  * Read from tele (can have robot ID for one robot)
  * Write to comm (returns error message)
  * Write log message (sender, level, message) - can I use logging for this?
* Send command
  * Basic loop setup
  * Thread to log messages (UDP)
  * Thread to respond to commands
  * Exit if prompted by command message
  
"""